@Library('commons') _

pipeline {
    agent none

    tools {
        jdk "jdk"
        maven "3.6.2"
        nodejs "12.8.3"
        git "Default"
    }

    options {
        //设置在项目打印日志时带上对应时间
        timestamps()
        // 设置流水线运行超过n分钟，Jenkins将中止流水线
        timeout time: 60, unit: 'MINUTES'
        // 禁止并行构建
        disableConcurrentBuilds()
        // 表示保留100次构建历史
        buildDiscarder(logRotator(numToKeepStr: '100', artifactNumToKeepStr: '0'))
    }
    environment {
        SERVICE_NAME="service-name"
        SERVICE_ENV="UAT"
        SERVICE_VER="1.0.0-SNAPSHOT"
    }
    stages {
        stage('获取代码') {
            steps {
                pullcode branch: "ahaha", credentialsId: "abc", url: "https://asdfadsf.com/project.git"
            }
        }

        stage('构建应用') {
            steps {
                sh 'mvn -T 8C package -P prod'
            }
        }
        stage('JAVA - 镜像模板') {
            steps {
                dockertpl tpl: 'layerjar', module: 'apzda-demo', jdkImage: 'openjdk:17'
            }
        }
        stage('NGINX - 镜像模板') {
            steps {
                dockertpl tpl: 'layerjar', module: 'apzda-demo', jdkImage: 'openjdk:17'
                sh "docker build -t apzda/${SERVICE_NAME}:${BUILD_DATE}-${BUILD_ID} --build_arg SERVICE_NAME=$SERVICE_NAME --build-arg SERVICE_VER=$SERVICE_VER --build-arg SERVICE_JAR=$SERVICE_NAME-$SERVICE_VER.jar --compress ./$SERVICE_NAME/target/docker"
            }
        }
        stage('发布镜像') {
            steps {
                sh 'docker push apzda/${SERVICE_NAME}:${BUILD_DATE}-${BUILD_ID}'
                sh 'docker rmi apzda/${SERVICE_NAME}:${BUILD_DATE}-${BUILD_ID}'
            }
        }
        stage('部署应用') {
            steps {
                // rancherRedeploy alwaysPull: true, credential: "", images: "apzda/${env.service_name}:${env.BUILD_DATE}-${env.BUILD_ID}", workload: "/project/${env.rancher_p}/workloads/deployment:${env.namespace}:${env.server_name}"
            }
        }
        post {
            always {
                // wechat token: "abc"
            }
        }
    }
}